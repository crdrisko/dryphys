name: build

on: [push]

env:
  BUILD_TYPE: Release

jobs:
  windows-builds:
    runs-on: windows-latest

    steps:
      - uses: actions/checkout@v4

      - name: Configure
        run: cmake $GITHUB_WORKSPACE -DCMAKE_BUILD_TYPE=$BUILD_TYPE # -Dphys_build_all=ON

      - name: Build
        run: cmake --build .

      - name: Install
        run: cmake --build . --target install

    #   - name: Test
    #     run: ctest --output-on-failure

  nix-builds:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-latest, ubuntu-latest]

    steps:
      - uses: actions/checkout@v4

      - name: Dependencies
        if: matrix.os == 'ubuntu-latest'
        run: |
            sudo apt-get install gcc-13 g++-13
            sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-13 70 --slave /usr/bin/g++ g++ /usr/bin/g++-13
            sudo apt install libxrandr-dev libxcursor-dev libudev-dev libopenal-dev libflac-dev libvorbis-dev libgl1-mesa-dev libegl1-mesa-dev libdrm-dev libgbm-dev

      - name: Configure
        run: cmake $GITHUB_WORKSPACE -DCMAKE_BUILD_TYPE=$BUILD_TYPE -Dphys_build_all=ON

      - name: Build
        run: cmake --build .

      - name: Install
        run: sudo cmake --build . --target install

      - name: Test
        run: ctest --output-on-failure
